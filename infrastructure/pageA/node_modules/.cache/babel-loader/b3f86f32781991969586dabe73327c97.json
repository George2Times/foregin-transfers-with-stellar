{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.accountMerge = accountMerge;\n\nvar _stellarXdr_generated = require('../generated/stellar-xdr_generated');\n\nvar _stellarXdr_generated2 = _interopRequireDefault(_stellarXdr_generated);\n\nvar _keypair = require('../keypair');\n\nvar _strkey = require('../strkey');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Transfers native balance to destination account.\n * @function\n * @alias Operation.accountMerge\n * @param {object} opts Options object\n * @param {string} opts.destination - Destination to merge the source account into.\n * @param {string} [opts.source] - The source account (defaults to transaction source).\n * @returns {xdr.AccountMergeOp} Account Merge operation\n */\n\n\nfunction accountMerge(opts) {\n  var opAttributes = {};\n\n  if (!_strkey.StrKey.isValidEd25519PublicKey(opts.destination)) {\n    throw new Error('destination is invalid');\n  }\n\n  opAttributes.body = _stellarXdr_generated2.default.OperationBody.accountMerge(_keypair.Keypair.fromPublicKey(opts.destination).xdrAccountId());\n  this.setSourceAccount(opAttributes, opts);\n  return new _stellarXdr_generated2.default.Operation(opAttributes);\n}","map":{"version":3,"sources":["/home/azureuser/foregin-transfers-with-stellar/infrastructure/pageA/node_modules/stellar-base/lib/operations/account_merge.js"],"names":["Object","defineProperty","exports","value","accountMerge","_stellarXdr_generated","require","_stellarXdr_generated2","_interopRequireDefault","_keypair","_strkey","obj","__esModule","default","opts","opAttributes","StrKey","isValidEd25519PublicKey","destination","Error","body","OperationBody","Keypair","fromPublicKey","xdrAccountId","setSourceAccount","Operation"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,YAAR,GAAuBA,YAAvB;;AAEA,IAAIC,qBAAqB,GAAGC,OAAO,CAAC,oCAAD,CAAnC;;AAEA,IAAIC,sBAAsB,GAAGC,sBAAsB,CAACH,qBAAD,CAAnD;;AAEA,IAAII,QAAQ,GAAGH,OAAO,CAAC,YAAD,CAAtB;;AAEA,IAAII,OAAO,GAAGJ,OAAO,CAAC,WAAD,CAArB;;AAEA,SAASE,sBAAT,CAAgCG,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEE,IAAAA,OAAO,EAAEF;AAAX,GAArC;AAAwD;AAE/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASP,YAAT,CAAsBU,IAAtB,EAA4B;AAC1B,MAAIC,YAAY,GAAG,EAAnB;;AACA,MAAI,CAACL,OAAO,CAACM,MAAR,CAAeC,uBAAf,CAAuCH,IAAI,CAACI,WAA5C,CAAL,EAA+D;AAC7D,UAAM,IAAIC,KAAJ,CAAU,wBAAV,CAAN;AACD;;AACDJ,EAAAA,YAAY,CAACK,IAAb,GAAoBb,sBAAsB,CAACM,OAAvB,CAA+BQ,aAA/B,CAA6CjB,YAA7C,CAA0DK,QAAQ,CAACa,OAAT,CAAiBC,aAAjB,CAA+BT,IAAI,CAACI,WAApC,EAAiDM,YAAjD,EAA1D,CAApB;AACA,OAAKC,gBAAL,CAAsBV,YAAtB,EAAoCD,IAApC;AAEA,SAAO,IAAIP,sBAAsB,CAACM,OAAvB,CAA+Ba,SAAnC,CAA6CX,YAA7C,CAAP;AACD","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.accountMerge = accountMerge;\n\nvar _stellarXdr_generated = require('../generated/stellar-xdr_generated');\n\nvar _stellarXdr_generated2 = _interopRequireDefault(_stellarXdr_generated);\n\nvar _keypair = require('../keypair');\n\nvar _strkey = require('../strkey');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Transfers native balance to destination account.\n * @function\n * @alias Operation.accountMerge\n * @param {object} opts Options object\n * @param {string} opts.destination - Destination to merge the source account into.\n * @param {string} [opts.source] - The source account (defaults to transaction source).\n * @returns {xdr.AccountMergeOp} Account Merge operation\n */\nfunction accountMerge(opts) {\n  var opAttributes = {};\n  if (!_strkey.StrKey.isValidEd25519PublicKey(opts.destination)) {\n    throw new Error('destination is invalid');\n  }\n  opAttributes.body = _stellarXdr_generated2.default.OperationBody.accountMerge(_keypair.Keypair.fromPublicKey(opts.destination).xdrAccountId());\n  this.setSourceAccount(opAttributes, opts);\n\n  return new _stellarXdr_generated2.default.Operation(opAttributes);\n}"]},"metadata":{},"sourceType":"script"}