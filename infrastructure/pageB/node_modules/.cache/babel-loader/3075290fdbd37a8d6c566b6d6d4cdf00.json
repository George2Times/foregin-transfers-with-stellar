{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.decodeBase58Check = decodeBase58Check;\n\nvar _isUndefined = require('lodash/isUndefined');\n\nvar _isUndefined2 = _interopRequireDefault(_isUndefined);\n\nvar _bs = require('./vendor/bs58');\n\nvar _bs2 = _interopRequireDefault(_bs);\n\nvar _hashing = require('./hashing');\n\nvar _checksum = require('./util/checksum');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar versionBytes = {\n  accountId: 0x00,\n  // decimal 0\n  none: 0x01,\n  // decimal 1\n  seed: 0x21 // decimal 33\n\n};\n\nfunction decodeBase58Check(versionByteName, encoded) {\n  var decoded = _bs2.default.decode(encoded);\n\n  var versionByte = decoded[0];\n  var payload = decoded.slice(0, decoded.length - 4);\n  var data = payload.slice(1);\n  var checksum = decoded.slice(decoded.length - 4);\n  var expectedVersion = versionBytes[versionByteName];\n\n  if ((0, _isUndefined2.default)(expectedVersion)) {\n    throw new Error(versionByteName + ' is not a valid version byte name.  expected one of \"accountId\", \"seed\", or \"none\"');\n  }\n\n  if (versionByte !== expectedVersion) {\n    throw new Error('invalid version byte.  expected ' + expectedVersion + ', got ' + versionByte);\n  }\n\n  var expectedChecksum = calculateChecksum(payload);\n\n  if (!(0, _checksum.verifyChecksum)(expectedChecksum, checksum)) {\n    throw new Error('invalid checksum');\n  }\n\n  if (versionByteName === 'accountId' && decoded.length !== 37) {\n    throw new Error('Decoded address length is invalid. Expected 37, got ' + decoded.length);\n  }\n\n  return Buffer.from(data);\n}\n\nfunction calculateChecksum(payload) {\n  var inner = (0, _hashing.hash)(payload);\n  var outer = (0, _hashing.hash)(inner);\n  return outer.slice(0, 4);\n}","map":{"version":3,"sources":["/home/azureuser/foregin-transfers-with-stellar/infrastructure/pageB/node_modules/stellar-base/lib/base58.js"],"names":["Object","defineProperty","exports","value","decodeBase58Check","_isUndefined","require","_isUndefined2","_interopRequireDefault","_bs","_bs2","_hashing","_checksum","obj","__esModule","default","versionBytes","accountId","none","seed","versionByteName","encoded","decoded","decode","versionByte","payload","slice","length","data","checksum","expectedVersion","Error","expectedChecksum","calculateChecksum","verifyChecksum","Buffer","from","inner","hash","outer"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,iBAAR,GAA4BA,iBAA5B;;AAEA,IAAIC,YAAY,GAAGC,OAAO,CAAC,oBAAD,CAA1B;;AAEA,IAAIC,aAAa,GAAGC,sBAAsB,CAACH,YAAD,CAA1C;;AAEA,IAAII,GAAG,GAAGH,OAAO,CAAC,eAAD,CAAjB;;AAEA,IAAII,IAAI,GAAGF,sBAAsB,CAACC,GAAD,CAAjC;;AAEA,IAAIE,QAAQ,GAAGL,OAAO,CAAC,WAAD,CAAtB;;AAEA,IAAIM,SAAS,GAAGN,OAAO,CAAC,iBAAD,CAAvB;;AAEA,SAASE,sBAAT,CAAgCK,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEE,IAAAA,OAAO,EAAEF;AAAX,GAArC;AAAwD;;AAE/F,IAAIG,YAAY,GAAG;AACjBC,EAAAA,SAAS,EAAE,IADM;AACA;AACjBC,EAAAA,IAAI,EAAE,IAFW;AAEL;AACZC,EAAAA,IAAI,EAAE,IAHW,CAGN;;AAHM,CAAnB;;AAMA,SAASf,iBAAT,CAA2BgB,eAA3B,EAA4CC,OAA5C,EAAqD;AACnD,MAAIC,OAAO,GAAGZ,IAAI,CAACK,OAAL,CAAaQ,MAAb,CAAoBF,OAApB,CAAd;;AACA,MAAIG,WAAW,GAAGF,OAAO,CAAC,CAAD,CAAzB;AACA,MAAIG,OAAO,GAAGH,OAAO,CAACI,KAAR,CAAc,CAAd,EAAiBJ,OAAO,CAACK,MAAR,GAAiB,CAAlC,CAAd;AACA,MAAIC,IAAI,GAAGH,OAAO,CAACC,KAAR,CAAc,CAAd,CAAX;AACA,MAAIG,QAAQ,GAAGP,OAAO,CAACI,KAAR,CAAcJ,OAAO,CAACK,MAAR,GAAiB,CAA/B,CAAf;AAEA,MAAIG,eAAe,GAAGd,YAAY,CAACI,eAAD,CAAlC;;AAEA,MAAI,CAAC,GAAGb,aAAa,CAACQ,OAAlB,EAA2Be,eAA3B,CAAJ,EAAiD;AAC/C,UAAM,IAAIC,KAAJ,CAAUX,eAAe,GAAG,oFAA5B,CAAN;AACD;;AAED,MAAII,WAAW,KAAKM,eAApB,EAAqC;AACnC,UAAM,IAAIC,KAAJ,CAAU,qCAAqCD,eAArC,GAAuD,QAAvD,GAAkEN,WAA5E,CAAN;AACD;;AAED,MAAIQ,gBAAgB,GAAGC,iBAAiB,CAACR,OAAD,CAAxC;;AAEA,MAAI,CAAC,CAAC,GAAGb,SAAS,CAACsB,cAAd,EAA8BF,gBAA9B,EAAgDH,QAAhD,CAAL,EAAgE;AAC9D,UAAM,IAAIE,KAAJ,CAAU,kBAAV,CAAN;AACD;;AAED,MAAIX,eAAe,KAAK,WAApB,IAAmCE,OAAO,CAACK,MAAR,KAAmB,EAA1D,EAA8D;AAC5D,UAAM,IAAII,KAAJ,CAAU,yDAAyDT,OAAO,CAACK,MAA3E,CAAN;AACD;;AAED,SAAOQ,MAAM,CAACC,IAAP,CAAYR,IAAZ,CAAP;AACD;;AAED,SAASK,iBAAT,CAA2BR,OAA3B,EAAoC;AAClC,MAAIY,KAAK,GAAG,CAAC,GAAG1B,QAAQ,CAAC2B,IAAb,EAAmBb,OAAnB,CAAZ;AACA,MAAIc,KAAK,GAAG,CAAC,GAAG5B,QAAQ,CAAC2B,IAAb,EAAmBD,KAAnB,CAAZ;AACA,SAAOE,KAAK,CAACb,KAAN,CAAY,CAAZ,EAAe,CAAf,CAAP;AACD","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.decodeBase58Check = decodeBase58Check;\n\nvar _isUndefined = require('lodash/isUndefined');\n\nvar _isUndefined2 = _interopRequireDefault(_isUndefined);\n\nvar _bs = require('./vendor/bs58');\n\nvar _bs2 = _interopRequireDefault(_bs);\n\nvar _hashing = require('./hashing');\n\nvar _checksum = require('./util/checksum');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar versionBytes = {\n  accountId: 0x00, // decimal 0\n  none: 0x01, // decimal 1\n  seed: 0x21 // decimal 33\n};\n\nfunction decodeBase58Check(versionByteName, encoded) {\n  var decoded = _bs2.default.decode(encoded);\n  var versionByte = decoded[0];\n  var payload = decoded.slice(0, decoded.length - 4);\n  var data = payload.slice(1);\n  var checksum = decoded.slice(decoded.length - 4);\n\n  var expectedVersion = versionBytes[versionByteName];\n\n  if ((0, _isUndefined2.default)(expectedVersion)) {\n    throw new Error(versionByteName + ' is not a valid version byte name.  expected one of \"accountId\", \"seed\", or \"none\"');\n  }\n\n  if (versionByte !== expectedVersion) {\n    throw new Error('invalid version byte.  expected ' + expectedVersion + ', got ' + versionByte);\n  }\n\n  var expectedChecksum = calculateChecksum(payload);\n\n  if (!(0, _checksum.verifyChecksum)(expectedChecksum, checksum)) {\n    throw new Error('invalid checksum');\n  }\n\n  if (versionByteName === 'accountId' && decoded.length !== 37) {\n    throw new Error('Decoded address length is invalid. Expected 37, got ' + decoded.length);\n  }\n\n  return Buffer.from(data);\n}\n\nfunction calculateChecksum(payload) {\n  var inner = (0, _hashing.hash)(payload);\n  var outer = (0, _hashing.hash)(inner);\n  return outer.slice(0, 4);\n}"]},"metadata":{},"sourceType":"script"}